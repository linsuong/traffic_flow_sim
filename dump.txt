folder_counter_1 = 0
folder_counter_2 = 0
slow_prob_range = np.arange(0, 0.8, 0.2)

random.seed(seeds)
sim = Simulation()

density_iteration = True
velocity_iteration = True

if density_iteration == True:
    counter_1 = 0
    counter_2 = 0

    for slow_prob in slow_prob_range:
        for density_range in range(100, 800, 100):
            counter_1 = counter_1 + 1
            folder = os.path.join(r"C:\Users\linus\Documents\traffic simulation plots\densities\kindess")

            if not os.path.exists(folder):
                os.makedirs(folder)

            sim = Simulation()
            sim.Vehicle = Vehicle(max_velocity = 5, slow_prob = slow_prob, kindness = True)
            sim.Road = Road(length= 1000, density = density_range/1000)
            sim.initialize()
            sim.update(steps)
            sim.flow_rate_loop(steps)
            sim.plot_timespace(steps, save = True, folder = folder, number = counter_1)
            description = os.path.join(folder, "config.txt")

    with open(description, "w") as description_file:
        description_file.write("configuration(seed, max_velocity, slow_prob, kindess/recklness/none, length, steps)")
        description_file.write(f"{seeds}, 5, 0.5, kindness = True, 1000, {steps}")

    for slow_prob in slow_prob_range:
        for density_range in range(10, 1000, 100):
            counter_2 = counter_2 + 1
            print("counter =", counter_1)
            folder = os.path.join(r"C:\Users\linus\Documents\traffic simulation plots\densities\reckless")

            if not os.path.exists(folder):
                os.makedirs(folder)

            sim = Simulation()
            sim.Vehicle = Vehicle(max_velocity = 5, slow_prob = slow_prob, reckless = True)
            sim.Road = Road(length= 1000, density = density_range/1000)
            sim.initialize()
            sim.update(steps)
            sim.flow_rate_loop(steps)
            sim.plot_timespace(steps, save = True, folder = folder, number = counter_2)
            description = os.path.join(folder, "config.txt")

    with open(description, "w") as description_file:
        description_file.write("configuration(seed, max_velocity, slow_prob, kindess/recklness/none, length, steps)")
        description_file.write(f"{seeds}, 5, 0.5, reckless = True, 1000, {steps}")

if velocity_iteration == True:
    counter_1 = 0
    counter_2 = 0

    for slow_prob in slow_prob_range:
        for velocity_range in range(5, 55, 10):
            counter_2 = counter_2 + 1
            print("counter =", counter_1)
            folder = r"C:\Users\linus\Documents\traffic simulation plots\velocities\kindness"

            if not os.path.exists(folder):
                os.makedirs(folder)

            sim = Simulation()
            sim.Vehicle = Vehicle(max_velocity = velocity_range, slow_prob = slow_prob, kindness = True)
            sim.Road = Road(length= 1000, density=100/1000)
            sim.initialize()
            sim.update(steps)
            sim.flow_rate_loop(steps)
            sim.plot_timespace(steps, save = True, folder = folder, number = counter_1)
            sim.plot_density(steps, isAvg = True, save = True, folder = folder, number = counter_1)
            description = os.path.join(r"C:\Users\linus\Documents\traffic simulation plots\velocities\kindness", "config.txt")

        with open(description, "w") as description_file:
            description_file.write("configuration(max_velocity, slow_prob, kindess/recklness/none, length, density, steps)")
            description_file.write(f"{seeds}, {velocity_range}, 0.5, kindness = True, 1000, 100/1000, {steps}")

    for slow_prob in slow_prob_range:
        for velocity_range in range(5, 55, 10):
            counter_2 = counter_2 + 1
            print("counter =", counter_1)
            folder = r"C:\Users\linus\Documents\traffic simulation plots\velocities\reckless"

            if not os.path.exists(folder):
                os.makedirs(folder)

            sim = Simulation()
            sim.Vehicle = Vehicle(max_velocity = velocity_range, slow_prob = slow_prob, reckless = True)
            sim.Road = Road(length= 1000, density=100/1000)
            sim.initialize()
            sim.update(steps)
            sim.flow_rate_loop(steps)
            sim.plot_timespace(steps, save = True, folder = folder, number = counter_2)
            sim.plot_density(steps, isAvg = True, save = True, folder = folder, number = counter_2)
            description = os.path.join(r"C:\Users\linus\Documents\traffic simulation plots\velocities\reckless", "config.txt")

        with open(description, "w") as description_file:
            description_file.write("configuration(max_velocity, slow_prob, kindess/recklness/none, length, density, steps)")
            description_file.write(f"{seeds}, {velocity_range}, 0.5, reckless = True, 1000, 100/1000, {steps}")